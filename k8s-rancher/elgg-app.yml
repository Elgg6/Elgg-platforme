apiVersion: apps/v1
kind: Deployment
metadata:
  name: elgg-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elgg-app
  template:
    metadata:
      labels:
        app: elgg-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: test-workernode

      initContainers:
      - name: wait-for-db
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z elgg-db 3306; do echo waiting for db; sleep 2; done']

      - name: fix-permissions
        image: busybox
        command: ['sh', '-c', 'chown -R www-data:www-data /var/www/html/data /var/www/html/elgg/elgg-config']
        volumeMounts:
        - mountPath: /var/www/html/data
          name: elgg-data
        - mountPath: /var/www/html/elgg/elgg-config
          name: elgg-config

      containers:
      - name: elgg-app
        image: bitaouioussama/elgg-app:v11
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: elgg-env
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "300m"
            memory: "500Mi"
          limits:
            cpu: "400m"
            memory: "700Mi"
        volumeMounts:
        - mountPath: /var/www/html/data
          name: elgg-data
        - mountPath: /var/www/html/elgg/elgg-config
          name: elgg-config

      volumes:
      - name: elgg-data
        persistentVolumeClaim:
          claimName: elgg-pvc
      - name: elgg-config
        persistentVolumeClaim:
          claimName: elgg-config-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: elgg-app
spec:
  type: NodePort
  selector:
    app: elgg-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32329
