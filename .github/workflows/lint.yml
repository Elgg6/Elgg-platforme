name: Lint checks
on: [pull_request]
permissions:
  contents: read
  actions: write
  pull-requests: write
  issues: write
  id-token: write
  security-events: write
  packages: write

jobs:
  php_lint:
    name: Validate composer.json and PHP Coding style
    runs-on: ubuntu-latest
    steps:
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          extensions: gd,pdo,xml,json,mysqli,pdo_mysql,intl
          tools: composer:v2

      - name: Code checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> ${GITHUB_OUTPUT}

      - name: Restore Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Composer validate
        run: composer validate --no-check-all

      - name: Install PHPCS and Elgg standards
        run: |
          # Install PHPCS and Elgg standards explicitly
          composer require --dev squizlabs/php_codesniffer elgg/sniffs --prefer-dist --no-progress --ansi
          
          # Verify standards are installed
          if [ ! -d "vendor/elgg/sniffs/src/Elgg" ]; then
            echo "::error::Elgg coding standards not found"
            composer show elgg/sniffs
            exit 1
          fi

      - name: Verify PHPCS installation
        run: vendor/bin/phpcs -i

      - name: Run PHP Code Style checks
        run: |
          if [ -d "mod" ]; then
            echo "Running PHPCS with Elgg standards on mod directory"
            vendor/bin/phpcs --standard=vendor/elgg/sniffs/src/Elgg -sp mod
          else
            echo "::warning::No mod directory found for PHPCS checks"
          fi

  languages_lint:
    name: Validate language files are UTF-8 encoded
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Check encoding of Plugin language files
        run: |
          if [ -d "mod" ]; then
            echo 'Checking language files in mod directory...'
            ! find mod/ -name "*.php" -type f -exec file --mime {} \; | grep -v "charset=utf-8" | grep -v "charset=us-ascii" || exit 1
          else
            echo "No mod directory found for language checks"
          fi
